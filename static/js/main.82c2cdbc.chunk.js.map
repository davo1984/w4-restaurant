{"version":3,"sources":["Components/ShowMap.js","Components/AccordianMenu.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","width","height","GoogleApiWrapper","Component","apiKey","Map","AccordianMenu","props","undefined","this","items","length","map","item","idx","key","description","className","price","id","data-toggle","data-target","name","aria-expanded","aria-controls","title","aria-labelledby","data-parent","App","fillMenus","a","i","state","menuArr","getMenuItems","num","subMenu","setState","isLoaded","console","log","error","menuSize","location","Axios","get","then","result","tempMenuArr","data","menu_items","Math","random","toFixed","subMenuArr","push","src","alt","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.82c2cdbc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '90%',\n  height: '80%'\n};\n\nexport class ShowMap extends Component {\n  constructor(props){\n    super(props);\n  }\n  state = { \n    camusLocation: { lat: 38.092800, lng: -84.454870 },\n  }\n  \n  render() {\n    { console.log(this.state.props.camusLocation)}\n    return (\n      <Map\n        google={this.props.google}\n        zoom={5}\n        style={mapStyles}\n        initialCenter={ this.props.state.camusLocation }\n      >\n      <Marker \n        position={ this.props.state.camusLocation }\n        onClick={this.onMarkerClick}\n        name={\"Camus' Absurdist Dining\"} \n      />\n\n      <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}\n        onClose={this.onClose}\n      >\n\n        <div>\n          <h4>{this.state.selectedPlace.name}</h4>\n        </div>\n      </InfoWindow>\n      </Map>\n    );\n  }\n}\n\n// open window with google map info\nconst onMarkerClick = (props, marker, e) => {\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n}\n\n// close the google map window.  Window hidden when false.\nconst onClose = props => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    });\n  }\n};\n\nexport default GoogleApiWrapper({\n  // apiKey: 'AIzaSyChuf6UEUwT1twd5cHHKuZEqVm643KL_Ek'\n  apiKey: 'AIzaSyBiaAYMvJa3wuN__cCgONxjvyswiU47QTE'\n})(Map);","import React, { Component } from \"react\";\nclass AccordianMenu extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (this.props.items == undefined \n          || this.props.items.length == 0 \n          || this.props.items == null ) {\n      return null;\n    } else {\n      let items = this.props.items.map(( item, idx ) => {\n        return (\n          <tr key={ idx }>\n            <td key={ 0 }>{item.description}</td><td className=\"text-right\"> ${item.price}</td>\n          </tr>\n        )\n      });\n      return (\n        // {/* Accordian Below! */ }\n        <div id=\"accordion\">\n          <div className=\"card\">\n\n            <div className=\"card-header\" id=\"headingOne\">\n              <button className=\"btn btn-link\" data-toggle=\"collapse\" data-target={\"#collapse\"+this.props.name} aria-expanded=\"true\" aria-controls={\"collapse\"+this.props.name}>\n                {this.props.title}</button>\n            </div>\n\n            <div id={\"collapse\"+this.props.name} className=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n\n              <div className=\"card-body\">\n                <div>\n                  <table className=\"table table-striped p-5\">\n                    {/* <table className=\"table table-striped w-50 p-3\"> */}\n                    <tbody>\n                      {items}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default AccordianMenu;\n","import React, { Component } from \"react\";\n// import { faTrademark, faCocktail, faLungsVirus, faCloudMeatball, faFlushed } from \"@fortawesome/free-solid-svg-icons\";\n// import { faGrav } from \"@fortawesome/free-brands-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Axios from \"axios\";\nimport './App.css';\nimport ShowMap from './Components/ShowMap.js';\n// import NavMenu from './Components/NavMenu.js';\nimport AccordianMenu from './Components/AccordianMenu.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      menuSize: 0,\n    menuArr: [\n      { name: \"Deserts\", title: \"Life is Uncertain, Eat Desert FIRST!\", num: 18},\n      { name: \"Appetizers\", title: \"Appetizers and Hors d'oeuvres\", num: 8},\n      { name: \"Entrees\", title: \"Entrees\", num: 9 },\n      { name: \"Seafood\", title: \"Seafood Main Courses\", num: 14 },\n      { name: \"Meat\", title: \"Beef, Veil, Lamb and Goat\", num: 7 },\n      { name: \"Vegan\", title: \"Vegan and Vegetarian Courses\", num: 9 },\n      { name: \"Haggis\", title: \"Haggis and other abominations\", num: 3 },\n      ],\n      subMenu: [],\n      isLoaded: false,\n    }\n  }\n\n  async getMenuItems ( location, num){\n    Axios.get(\"https://entree-f18.herokuapp.com/v1/menu/\" + num)\n      .then(\n        (result) => { \n          let tempMenuArr = result.data.menu_items.map((item, idx) => {\n            item.price = ((Math.random() * 12) + 4).toFixed(2);\n            return item\n          });\n          // i is the index\n          // copies the submenu\n          let subMenuArr = this.state.subMenu; // includes subMenu[0], subMenu[1]\n          if(subMenuArr[location] === undefined){\n            subMenuArr.push(tempMenuArr);\n          } else {\n            subMenuArr[location] = tempMenuArr;\n          }\n\n          this.setState({\n            subMenu: subMenuArr,\n          }); \n        }\n      )\n  }\n\n  fillMenus = async () => {            // still needed for \"specials\"\n    try {\n      for (let i=0 ; i < this.state.menuArr.length ; i++) {  // loop here menuArr\n        await this.getMenuItems(i, this.state.menuArr[i].num);\n        // check to make sure we have the right number of items\n        if (this.state.subMenu.length > 0) {\n          if(this.state.menuArr[i].num != this.state.subMenu[i].length){\n            await this.getMenuItems(i, this.state.menuArr[i].num - this.state.subMenu[i].length);\n            // console.log('i=',i);\n          }\n        }\n      }\n      this.setState({\n        isLoaded: true,\n      });\n    }\n    catch (error) {\n      console.log(error)\n      console.error(error)  //todo more better error handling\n    }\n  }\n\n  async componentDidMount () {\n    \n    for (let i = 0; i < this.state.menuArr.length; i++) {  // loop here menuArr\n      await this.fillMenus();\n      // check to make sure we have the right number of items\n      if (this.state.subMenu.length > 0) {\n        if (this.state.menuArr[i].num != this.state.subMenu[i].length) {\n          await this.getMenuItems(i, this.state.menuArr[i].num - this.state.subMenu[i].length);\n        }\n      }\n    } \n  }\n\n  render() {\n    // {console.log(\"building menus, dessertMenu\", DesertMenu);}\n    if(this.state.isLoaded){\n    return (\n      <div className=\"App\">\n        <div className=\"row mx-3\">\n          <div className=\"col-3 py-3\">\n            <h1>Camus&#39; Absurdist Dining</h1>\n            <p>Even after your Fall don't be The Stranger!</p>\n            {/* <p>Even after your Fall don't be The Stranger!<FontAwesomeIcon icon={faGrav} /></p> */}\n            <p>Hours:</p>\n            <ul className=\"list-group mx-auto\">\n              <li className=\"list-group-item\">Mon: Midnight - 8 AM</li>\n              <li className=\"list-group-item\">Tue: 9 pm - 8 AM</li>\n              <li className=\"list-group-item\">Wed: 3 am - 7 AM</li>\n              <li className=\"list-group-item\">Thr: 7 GMT - 8 AM</li>\n              <li className=\"list-group-item\">Fri: 3 am - 7 AM</li>\n              <li className=\"list-group-item\">Sat: 9 pm - 8 AM</li>\n              <li className=\"list-group-item\">Sun: Midnight - 8 AM</li>\n            </ul>\n          </div>\n          <div className=\"col-6\">\n            <img src=\"./images/fleur-de-lis.jpeg\" className=\"rounded-circle mt-1\" alt=\"Our establishment\" /><p>348 East Main Street<br />Lexington, KY</p>\n            {/* <NavMenu /> */}\n          </div>\n          <div className=\"col-3 text-center\">\n            <h1>Visit our old location!</h1>\n\n            <div id=\"googleMap\" className=\"pr-3 pb-3\">\n              <ShowMap />\n            </div>\n\n          </div>\n        </div>\n\n        <AccordianMenu items={this.state.subMenu[0]}\n          title={this.state.menuArr[0].title} \n          name={this.state.menuArr[0].name} />\n\n        <AccordianMenu items={this.state.subMenu[1]}\n          title={this.state.menuArr[1].title} \n          name={this.state.menuArr[1].name} />\n\n        <AccordianMenu items={this.state.subMenu[2]}\n          title={this.state.menuArr[2].title}\n          name={this.state.menuArr[2].name} />\n\n        <AccordianMenu items={this.state.subMenu[3]}\n          title={this.state.menuArr[3].title}\n          name={this.state.menuArr[3].name} />\n\n        <AccordianMenu items={this.state.subMenu[4]}\n          title={this.state.menuArr[4].title}\n          name={this.state.menuArr[4].name} />\n\n        <AccordianMenu items={this.state.subMenu[5]}\n          title={this.state.menuArr[5].title}\n          name={this.state.menuArr[5].name} />\n\n        <AccordianMenu items={this.state.subMenu[6]}\n          title={this.state.menuArr[6].title}\n          name={this.state.menuArr[6].name} />\n\n      </div>\n    );\n    } else {\n      return (\n        <>\n        <h1>Loading...TODO place spinner here</h1>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\nimport $ from 'jquery'\nimport popper from 'popper.js'\nimport \"../node_modules/jquery/dist/jquery.min.js\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}